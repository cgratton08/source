	/*
	 * Display short version on one line
	 */
    public String getShortVersion()
    {
    	// Artifact's name from the pom.xml file

    	StringBuilder sb = new StringBuilder();
    	sb.append(buildProperties.getName())
    	.append(" Version: ")
    	.append(buildProperties.getVersion())
    	.append(" Last-build: ")
    	.append(buildProperties.getTime())
    	.append(" Build with java: ")
    	.append(buildProperties.get(JAVA_VERSION));
    	
    	return sb.toString();
    }
    
    /*
     * Display short version on multiple lines
     */
    public String getShortVersionFormatted()
    {
    	// Artifact's name from the pom.xml file

    	StringBuilder sb = new StringBuilder();
    	sb.append(buildProperties.getName())
    	.append("\n\tVersion: ")
    	.append(buildProperties.getVersion())
    	.append("\n\tLast-build: ")
    	.append(buildProperties.getTime())
    	.append("\n\tBuild with java: ")
    	.append(buildProperties.get(JAVA_VERSION));

    	return sb.toString();
    }
    
	/*
	 * Display short version on one line
	 */
    public Map<String,String> getShortVersionAsMap()
    {
    	// Artifact's name from the pom.xml file

    	Map<String,String> map = new HashMap<>();
    	map.put("name", buildProperties.getName());
    	map.put("version", buildProperties.getVersion());
    	map.put("time", buildProperties.getTime().toString());
    	map.put("javaVersion", buildProperties.get(JAVA_VERSION));
 	
    	return map;
    }

    
    /*
     * Display long version on one line
     */
    public String getLongVersion()
    {
    	// Artifact's name from the pom.xml file

    	StringBuilder sb = new StringBuilder();
    	sb.append(buildProperties.getName())
    	.append(" Version: ")
    	.append(buildProperties.getVersion())
    	.append(" Last-build: ")
    	.append(buildProperties.getTime())  	
    	.append(" Artifact: ")
    	.append(buildProperties.getArtifact())
    	.append(" Group: ")
    	.append(buildProperties.getGroup())
    	.append(" Build with java: ")
    	.append(buildProperties.get(JAVA_VERSION));
	    	    	
    	return sb.toString();
    } 
    
    /*
     * Display long version on multiple lines
     */
    public String getLongVersionFormatted()
    {
    	// Artifact's name from the pom.xml file

    	StringBuilder sb = new StringBuilder();
    	sb.append(buildProperties.getName())
    	.append("\n\tVersion: ")
    	.append(buildProperties.getVersion())
    	.append("\n\tLast-build: ")
    	.append(buildProperties.getTime())  	
    	.append("\n\tArtifact: ")
    	.append(buildProperties.getArtifact())
    	.append("\n\tGroup: ")
    	.append(buildProperties.getGroup())
    	.append("\n\tBuild with java: ")
    	.append(buildProperties.get(JAVA_VERSION));
    	
    	return sb.toString();
    } 

    public void getPrintVersion() {
    	logger.info("Name: {}\nVersion: {}\nLast build: {}\nArtifact: {}\nGroup: {}", buildProperties.getName(), buildProperties.getVersion(), buildProperties.getTime(), buildProperties.getArtifact(), buildProperties.getGroup());
    } 
    
    public void getPrintVersionFormatted() {
    	logger.info("Name: {}\n\tVersion: {}\n\tLast build: {}\n\tArtifact: {}\n\tGroup: {}", buildProperties.getName(), buildProperties.getVersion(), buildProperties.getTime(), buildProperties.getArtifact(), buildProperties.getGroup());
    } 
